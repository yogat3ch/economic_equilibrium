% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_inputs.R
\name{ui_card_age}
\alias{ui_card_age}
\title{Create an Age input widget}
\usage{
ui_card_age(inputId, ..., card_wrap = TRUE)
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the value.}

\item{...}{
  Arguments passed on to \code{\link[shinyWidgets:noUiSliderInput]{shinyWidgets::noUiSliderInput}}
  \describe{
    \item{\code{label}}{Display label for the control, or NULL for no label.}
    \item{\code{min}}{Minimal value that can be selected.}
    \item{\code{max}}{Maximal value that can be selected.}
    \item{\code{value}}{The initial value of the slider. as many cursors will be created as values provided.}
    \item{\code{step}}{numeric, by default, the slider slides fluently.
In order to make the handles jump between intervals, you can use
the step option.}
    \item{\code{tooltips}}{logical, display slider's value in a tooltip above slider.}
    \item{\code{connect}}{logical, vector of length \code{value} + 1, color slider between handle(s).}
    \item{\code{padding}}{numeric, padding limits how close to the slider edges handles can be.}
    \item{\code{margin}}{numeric, when using two handles, the minimum distance between
the handles can be set using the margin option.}
    \item{\code{limit}}{numeric, the limit option is the opposite of the \code{margin} option,
limiting the maximum distance between two handles.}
    \item{\code{orientation}}{The orientation setting can be used to set the
slider to \code{"vertical"} or \code{"horizontal"}.}
    \item{\code{direction}}{\code{"ltr"} or \code{"rtl"}, By default the sliders are top-to-bottom and left-to-right,
but you can change this using the direction option,
which decides where the upper side of the slider is.}
    \item{\code{behaviour}}{Option to handle user interaction, a value or several between
\code{"drag"}, \code{"tap"}, \code{"fixed"}, \code{"snap"} or \code{"none"}.
See \url{https://refreshless.com/nouislider/behaviour-option/} for more examples.}
    \item{\code{range}}{list, can be used to define non-linear sliders.}
    \item{\code{pips}}{list, used to generate points along the slider.}
    \item{\code{format}}{numbers format, see \code{\link[shinyWidgets]{wNumbFormat}}.}
    \item{\code{update_on}}{When to send value to server: \code{"end"} (when slider is released) or \code{"change"} (each time value changes).}
    \item{\code{color}}{color in Hex format for the slider.}
    \item{\code{inline}}{If \code{TRUE}, it's possible to position sliders side-by-side.}
    \item{\code{width}}{The width of the input, e.g. \verb{400px}, or \verb{100\%}.}
    \item{\code{height}}{The height of the input, e.g. \verb{400px}, or \verb{100\%}.}
  }}

\item{card_wrap}{\code{lgl} Wrap the input in a \code{\link[bslib]{card}}?}
}
\value{
\code{shiny.tag}
}
\description{
Create an Age input widget
}
